"""
1. 2차원 배열 구조를 구성
  - 상자들은 w개의 열로 구성된 격자에 지그재그 방식(좌→우, 우→좌)으로 한 줄씩 쌓인다.
  - 이를 통해 num 상자가 몇 번째 줄(층)에, 몇 번째 칸(열)에 있는지 알아낼 수 있다.

2. num 상자의 위치 파악
  - row = (num - 1) // w → 몇 번째 줄인지
  - col = (num - 1) % w → 몇 번째 열인지

  하지만 짝수 줄(0, 2, 4...)이면 왼쪽에서 오른쪽으로, 홀수 줄이면 오른쪽에서 왼쪽으로 쌓이므로,

  - 짝수 줄: col = col
  - 홀수 줄: col = w - 1 - col

3. num 상자 위에 있는 상자 개수 계산 num 상자가 위치한 (row, col)에서, 위에 있는 상자들을 조사.
  - 위에 있는 층들을 보면서 같은 col 위치에 쌓여있는 상자들을 센다.
  - 위쪽 줄이 왼→오 쌓기인지 오→왼 쌓기인지에 따라, 열 인덱스를 다시 계산해야 한다.(중요)

4. 위에 있는 상자 수 + 본인 포함해서 총 개수 리턴
"""

def solution(n, w, num):
    answer = 1  # 본인 포함

    row = (num - 1) // w
    col = (num - 1) % w

    # num이 있는 줄이 홀수번째 줄(0-indexed)면 방향 반전
    if row % 2 == 1:
        col = w - 1 - col

    # num보다 큰 숫자 중, 위층에 있고 같은 col에 있는 상자 세기
    for i in range(num + 1, n + 1):
        r = (i - 1) // w
        c = (i - 1) % w

        # 위층도 방향 고려해서 열 위치 계산
        if r % 2:
            c = w - 1 - c

        if c == col:
            answer += 1

    return answer
