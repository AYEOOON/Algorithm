# 해시 함수란 임의의 길이의 입력을 받아서 고정된 길이의 출력을 내보내는 함수로 정의한다.
# 영어에는 총 26개의 알파벳이 존재하므로 a에는 1, b에는 2, c에는 3, ..., z에는 26으로 고유한 번호를 부여할 수 있다. 결과적으로 우리는 하나의 문자열을 수열로 변환할 수 있다. 
# 예를 들어서 문자열 "abba"은 수열 1, 2, 2, 1로 나타낼 수 있다.
# 해시 값을 계산하기 위해서 우리는 문자열 혹은 수열을 하나의 정수로 치환하려고 한다. 간단하게는 수열의 값을 모두 더할 수도 있다. 
# 해시 함수의 정의에서 유한한 범위의 출력을 가져야 한다고 했으니까 적당히 큰 수 M으로 나눠주자
# 좋은 해시 함수는 최대한 충돌이 적게 일어나야 한다. 위에서 정의한 해시 함수는 알파벳의 순서만 바꿔도 충돌이 일어나기 때문에 나쁜 해시 함수이다. 
# 어떻게 하면 순서가 달라졌을때 출력값도 달라지게 할 수 있을까? 머리를 굴리면 수열의 각 항마다 고유한 계수를 부여하면 된다는 아이디어를 생각해볼 수 있다. 
# 가장 대표적인 방법은 항의 번호에 해당하는 만큼 특정한 숫자를 거듭제곱해서 곱해준 다음 더하는 것이 있다.
# 보통 r과 M은 서로소인 숫자로 정하는 것이 일반적이다. 우리가 직접 정하라고 하면 힘들테니까 r의 값은 26보다 큰 소수인 31로 하고 M의 값은 1234567891(놀랍게도 소수이다!!)로 하자.
# 첫 줄에는 문자열의 길이 L이 들어온다. 둘째 줄에는 영문 소문자로만 이루어진 문자열이 들어온다.
# 입력으로 주어지는 문자열은 모두 알파벳 소문자로만 구성되어 있다.
# 문제에서 주어진 해시함수와 입력으로 주어진 문자열을 사용해 계산한 해시 값을 정수로 출력한다.

# 소문자 알파벳이 오면 a부터 z까지 1~ 26까지의 값을 가진다고 한다. 그렇다면 여기서 바로 생각할 것은 아스키 코드이다. 
# a의 아스키 코드는 97이다. a가 1이란 값을 가지려면 a - 96을 해주면 된는 것이다.
# 그리고 맨 앞자리부터 31의 제곱수를 곱해준다. 
# 3 abc 면 1 * (31의 0제곱) + 2 * (31의 1제곱) + 3 * (31의 2제곱)을 해주면된다. 
# 그리고 그 값에 1234567891을 나눈 나머지를 구하면 된다.


# 내 풀이
L = int(input())
word = input()
a = 0

for i in range(L):
  a += (ord(word[i]) - 96)*(31**i)

print(a%1234567891)
